
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://xgnsplrftoojbckbpuxa.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhnbnNwbHJmdG9vamJja2JwdXhhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE4OTQzODYsImV4cCI6MjA1NzQ3MDM4Nn0.A8Xg0Fftlrp61BeJQTfvwNabOBlWh3a17E8_mJThPzY";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to create incremental updates
export const incrementValue = (value: number) => {
  return value + 1;
};

// Helper function to add amounts
export const addAmount = (currentValue: number, amountToAdd: number) => {
  return currentValue + amountToAdd;
};

// Helper function to update game session stats
export const updateGameSessionStats = async (
  sessionId: string, 
  spinsIncrement: number, 
  betAmount: number, 
  winAmount: number
) => {
  try {
    // First, get the current values from the session
    const { data: session, error: fetchError } = await supabase
      .from('game_sessions')
      .select('total_spins, total_bet, total_win')
      .eq('id', sessionId)
      .single();
    
    if (fetchError || !session) {
      console.error('Error fetching game session:', fetchError);
      return { error: fetchError };
    }
    
    // Then update with the new calculated values
    const { error } = await supabase
      .from('game_sessions')
      .update({
        total_spins: session.total_spins + spinsIncrement,
        total_bet: session.total_bet + betAmount,
        total_win: session.total_win + winAmount
      })
      .eq('id', sessionId);
    
    return { error };
  } catch (error) {
    console.error('Error updating game session stats:', error);
    return { error };
  }
};
